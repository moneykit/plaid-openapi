# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.

{{#models}}{{#model}}{{#isEnum}}
# PRE-CLEANUP ENUM
{{{classname}}}
# PRE-CLEANUP ENUM
{{{modelJson}}}
{{/isEnum}}{{/model}}{{/models}}

{{#models}}{{#model}}{{^isEnum}}
from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
{{#models}}
{{#model}}
{{#pyImports}}
{{import}}
{{/pyImports}}
{{/model}}
{{/models}}


{{#models}}
{{#model}}


class {{classname}}(BaseModel):
    """{{{description}}}"""

{{#isNullable}}
    class Config:
        schema_extra = {"nullable": True}
{{/isNullable}}

{{#vars}}
    {{name}}: {{#required}}{{#isNullable}}Optional[{{/isNullable}}{{>model_field_type}}{{#isNullable}}]{{/isNullable}}{{/required}}{{^required}}Optional[{{>model_field_type}}]{{/required}} = Field({{^required}}default=None,{{/required}}{{#required}}{{#isNullable}}default=None,{{/isNullable}}{{/required}}{{#description}} description="{{{description}}}"{{/description}})
{{/vars}}
{{#vars}}
{{#maximum}}

    @validator("{{name}}")
    def {{name}}_max(cls, value):
        assert value <= {{maximum}}
        return value
{{/maximum}}
{{#minimum}}

    @validator("{{name}}")
    def {{name}}_min(cls, value):
        assert value >= {{minimum}}
        return value
{{/minimum}}
{{#minLength}}

    @validator("{{name}}")
    def {{name}}_min_length(cls, value):
        assert len(value) >= {{minLength}}
        return value
{{/minLength}}
{{#maxLength}}

    @validator("{{name}}")
    def {{name}}_max_length(cls, value):
        assert len(value) <= {{maxLength}}
        return value
{{/maxLength}}
{{#pattern}}

    @validator("{{name}}")
    def {{name}}_pattern(cls, value):
        assert value is not None and re.match(r"{{pattern}}", value)
        return value
{{/pattern}}
{{/vars}}
{{/model}}
{{/models}}

{{classname}}.update_forward_refs()
{{/isEnum}}{{/model}}{{/models}}