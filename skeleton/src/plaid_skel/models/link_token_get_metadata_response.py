# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.account_filters_response import AccountFiltersResponse
from plaid_skel.models.country_code import CountryCode
from plaid_skel.models.link_token_create_institution_data import LinkTokenCreateInstitutionData
from plaid_skel.models.products import Products




class LinkTokenGetMetadataResponse(BaseModel):
    """An object specifying the arguments originally provided to the `/link/token/create` call."""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#link_token_get_metadata_response"
            }
        }

    initial_products: List[Products] = Field( description="The `products` specified in the `/link/token/create` call.")
    webhook: Optional[str] = Field(default=None, description="The `webhook` specified in the `/link/token/create` call.")
    country_codes: List[CountryCode] = Field( description="The `country_codes` specified in the `/link/token/create` call.")
    language: Optional[str] = Field(default=None, description="The `language` specified in the `/link/token/create` call.")
    institution_data: Optional[LinkTokenCreateInstitutionData] = Field(default=None,)
    account_filters: Optional[AccountFiltersResponse] = Field(default=None,)
    redirect_uri: Optional[str] = Field(default=None, description="The `redirect_uri` specified in the `/link/token/create` call.")
    client_name: Optional[str] = Field(default=None, description="The `client_name` specified in the `/link/token/create` call.")

LinkTokenGetMetadataResponse.update_forward_refs()
