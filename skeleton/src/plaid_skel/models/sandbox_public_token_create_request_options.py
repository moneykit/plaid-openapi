# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.sandbox_public_token_create_request_options_income_verification import SandboxPublicTokenCreateRequestOptionsIncomeVerification
from plaid_skel.models.sandbox_public_token_create_request_options_transactions import SandboxPublicTokenCreateRequestOptionsTransactions




class SandboxPublicTokenCreateRequestOptions(BaseModel):
    """An optional set of options to be used when configuring the Item. If specified, must not be `null`."""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#sandbox_public_token_create_request_options"
            }
        }

    webhook: Optional[str] = Field(default=None, description="Specify a webhook to associate with the new Item.")
    override_username: Optional[str] = Field(default=None, description="Test username to use for the creation of the Sandbox Item. Default value is `user_good`.")
    override_password: Optional[str] = Field(default=None, description="Test password to use for the creation of the Sandbox Item. Default value is `pass_good`.")
    transactions: Optional[SandboxPublicTokenCreateRequestOptionsTransactions] = Field(default=None,)
    income_verification: Optional[SandboxPublicTokenCreateRequestOptionsIncomeVerification] = Field(default=None,)

SandboxPublicTokenCreateRequestOptions.update_forward_refs()
