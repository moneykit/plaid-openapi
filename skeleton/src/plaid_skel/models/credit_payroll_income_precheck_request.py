# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.income_verification_precheck_employer import IncomeVerificationPrecheckEmployer
from plaid_skel.models.income_verification_precheck_military_info import IncomeVerificationPrecheckMilitaryInfo
from plaid_skel.models.income_verification_precheck_payroll_institution import IncomeVerificationPrecheckPayrollInstitution




class CreditPayrollIncomePrecheckRequest(BaseModel):
    """Defines the request schema for `/credit/payroll_income/precheck`."""


    client_id: Optional[str] = Field(default=None, description="Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.")
    secret: Optional[str] = Field(default=None, description="Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.")
    user_token: Optional[str] = Field(default=None, description="The user token associated with the User data is being requested for.")
    access_tokens: Optional[List[str]] = Field(default=None, description="An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.")
    employer: Optional[IncomeVerificationPrecheckEmployer] = Field(default=None,)
    us_military_info: Optional[IncomeVerificationPrecheckMilitaryInfo] = Field(default=None,)
    payroll_institution: Optional[IncomeVerificationPrecheckPayrollInstitution] = Field(default=None,)

CreditPayrollIncomePrecheckRequest.update_forward_refs()
