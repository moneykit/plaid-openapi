# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date as date_  # noqa: F401
from datetime import datetime as datetime_  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.fdx_content_types import FDXContentTypes
from plaid_skel.models.fdx_hateoas_link_action import FDXHateoasLinkAction




class FDXHateoasLink(BaseModel):
    """REST application constraint (Hypermedia As The Engine Of Application State)"""


    href: str = Field( description="URL to invoke the action on the resource")
    action: Optional[FDXHateoasLinkAction] = Field(default=None,)
    rel: Optional[str] = Field(default=None, description="Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)")
    types: Optional[List[FDXContentTypes]] = Field(default=None, description="Content-types that can be used in the Accept header")

FDXHateoasLink.update_forward_refs()
