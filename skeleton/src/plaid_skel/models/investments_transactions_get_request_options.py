# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401




class InvestmentsTransactionsGetRequestOptions(BaseModel):
    """An optional object to filter `/investments/transactions/get` results. If provided, must be non-`null`."""


    account_ids: Optional[List[str]] = Field(default=None, description="An array of `account_ids` to retrieve for the Item.")
    count: Optional[int] = Field(default=None, description="The number of transactions to fetch. ")
    offset: Optional[int] = Field(default=None, description="The number of transactions to skip when fetching transaction history")

    @validator("count")
    def count_max(cls, value):
        assert value <= 500
        return value

    @validator("count")
    def count_min(cls, value):
        assert value >= 1
        return value

    @validator("offset")
    def offset_min(cls, value):
        assert value >= 0
        return value

InvestmentsTransactionsGetRequestOptions.update_forward_refs()
