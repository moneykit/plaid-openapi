# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date as date_  # noqa: F401
from datetime import datetime as datetime_  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.security_override import SecurityOverride




class InvestmentsTransactionsOverride(BaseModel):
    """Specify the list of investments transactions on the account."""


    date: date_ = Field( description="Posting date for the transaction. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.")
    name: str = Field( description="The institution's description of the transaction.")
    quantity: float = Field( description="The number of units of the security involved in this transaction. Must be positive if the type is a buy and negative if the type is a sell.")
    price: float = Field( description="The price of the security at which this transaction occurred.")
    fees: Optional[float] = Field(default=None, description="The combined value of all fees applied to this transaction.")
    type: str = Field( description="The type of the investment transaction. Possible values are: `buy`: Buying an investment `sell`: Selling an investment `cash`: Activity that modifies a cash position `fee`: A fee on the account `transfer`: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer")
    currency: str = Field( description="Either a valid `iso_currency_code` or `unofficial_currency_code`")
    security: Optional[SecurityOverride] = Field(default=None,)

InvestmentsTransactionsOverride.update_forward_refs()
