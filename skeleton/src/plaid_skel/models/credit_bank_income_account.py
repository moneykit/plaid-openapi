# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic.v1 import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.credit_bank_income_account_type import CreditBankIncomeAccountType
from plaid_skel.models.depository_account_subtype import DepositoryAccountSubtype
from plaid_skel.models.owner import Owner




class CreditBankIncomeAccount(BaseModel):
    """The Item's bank accounts that have the selected data."""


    account_id: str = Field( description="Plaid's unique identifier for the account.")
    mask: Optional[str] = Field(default=None, description="The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.")
    name: str = Field( description="The name of the bank account.")
    official_name: Optional[str] = Field(default=None, description="The official name of the bank account.")
    subtype: DepositoryAccountSubtype = Field()
    type: CreditBankIncomeAccountType = Field()
    owners: List[Owner] = Field( description="Data returned by the financial institution about the account owner or owners. Identity information is optional, so field may return an empty array.")

CreditBankIncomeAccount.update_forward_refs()
