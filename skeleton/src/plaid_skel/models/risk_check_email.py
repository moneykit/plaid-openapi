# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.risk_check_email_domain_is_custom import RiskCheckEmailDomainIsCustom
from plaid_skel.models.risk_check_email_domain_is_disposable import RiskCheckEmailDomainIsDisposable
from plaid_skel.models.risk_check_email_domain_is_free_provider import RiskCheckEmailDomainIsFreeProvider
from plaid_skel.models.risk_check_email_is_deliverable_status import RiskCheckEmailIsDeliverableStatus
from plaid_skel.models.risk_check_email_top_level_domain_is_suspicious import RiskCheckEmailTopLevelDomainIsSuspicious
from plaid_skel.models.risk_check_linked_service import RiskCheckLinkedService




class RiskCheckEmail(BaseModel):
    """Result summary object specifying values for `email` attributes of risk check."""

    class Config:
        schema_extra = {"nullable": True}

    is_deliverable: RiskCheckEmailIsDeliverableStatus = Field()
    breach_count: Optional[int] = Field(default=None, description="Count of all known breaches of this email address if known.")
    first_breached_at: Optional[date] = Field(default=None, description="A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).")
    last_breached_at: Optional[date] = Field(default=None, description="A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).")
    domain_registered_at: Optional[date] = Field(default=None, description="A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).")
    domain_is_free_provider: RiskCheckEmailDomainIsFreeProvider = Field()
    domain_is_custom: RiskCheckEmailDomainIsCustom = Field()
    domain_is_disposable: RiskCheckEmailDomainIsDisposable = Field()
    top_level_domain_is_suspicious: RiskCheckEmailTopLevelDomainIsSuspicious = Field()
    linked_services: list[RiskCheckLinkedService] = Field()

RiskCheckEmail.update_forward_refs()
