# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.payment_initiation_optional_restriction_bacs import PaymentInitiationOptionalRestrictionBacs




class ExternalPaymentInitiationConsentOptions(BaseModel):
    """Additional payment consent options"""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#external_payment_initiation_consent_options"
            }
            , "nullable": True,
        }

    request_refund_details: Optional[bool] = Field(default=None, description="When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response.")
    iban: Optional[str] = Field(default=None, description="The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to set up payment consent using only the specified bank account if provided.")
    bacs: Optional[PaymentInitiationOptionalRestrictionBacs] = Field(default=None,)

    @validator("iban")
    def iban_min_length(cls, value):
        assert len(value) >= 15
        return value

    @validator("iban")
    def iban_max_length(cls, value):
        assert len(value) <= 34
        return value

ExternalPaymentInitiationConsentOptions.update_forward_refs()
