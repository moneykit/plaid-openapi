# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401




class Application(BaseModel):
    """Metadata about the application"""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#application"
            }
        }

    application_id: str = Field( description="This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.")
    name: str = Field( description="The name of the application")
    display_name: Optional[str] = Field(default=None, description="A human-readable name of the application for display purposes")
    join_date: date = Field( description="The date this application was granted production access at Plaid in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.")
    logo_url: Optional[str] = Field(default=None, description="A URL that links to the application logo image.")
    application_url: Optional[str] = Field(default=None, description="The URL for the application's website")
    reason_for_access: Optional[str] = Field(default=None, description="A string provided by the connected app stating why they use their respective enabled products.")
    use_case: Optional[str] = Field(default=None, description="A string representing client’s broad use case as assessed by Plaid.")
    company_legal_name: Optional[str] = Field(default=None, description="A string representing the name of client’s legal entity.")
    city: Optional[str] = Field(default=None, description="A string representing the city of the client’s headquarters.")
    region: Optional[str] = Field(default=None, description="A string representing the region of the client’s headquarters.")
    postal_code: Optional[str] = Field(default=None, description="A string representing the postal code of the client’s headquarters.")
    country_code: Optional[str] = Field(default=None, description="A string representing the country code of the client’s headquarters.")

Application.update_forward_refs()
