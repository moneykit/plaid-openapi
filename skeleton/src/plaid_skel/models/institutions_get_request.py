# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import field_validator, AnyUrl, BaseModel, EmailStr, Field  # noqa: F401
from plaid_skel.models.country_code import CountryCode
from plaid_skel.models.institutions_get_request_options import InstitutionsGetRequestOptions




class InstitutionsGetRequest(BaseModel):
    """InstitutionsGetRequest defines the request schema for `/institutions/get`"""


    client_id: Optional[str] = Field(default=None, description="Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.")
    secret: Optional[str] = Field(default=None, description="Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.")
    count: int = Field( description="The total number of Institutions to return.")
    offset: int = Field( description="The number of Institutions to skip.")
    country_codes: List[CountryCode] = Field( description="Specify an array of Plaid-supported country codes this institution supports, using the ISO-3166-1 alpha-2 country code standard.  In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied. ")
    options: Optional[InstitutionsGetRequestOptions] = Field(default=None,)

    @field_validator("count")
    @classmethod
    def count_max(cls, value):
        assert value <= 500
        return value

    @field_validator("count")
    @classmethod
    def count_min(cls, value):
        assert value >= 1
        return value

    @field_validator("offset")
    @classmethod
    def offset_min(cls, value):
        assert value >= 0
        return value

InstitutionsGetRequest.update_forward_refs()
