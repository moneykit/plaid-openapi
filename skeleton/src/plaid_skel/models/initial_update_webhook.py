# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic.v1 import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.webhook_environment_values import WebhookEnvironmentValues




class InitialUpdateWebhook(BaseModel):
    """Fired when an Item's initial transaction pull is completed. Once this webhook has been fired, transaction data for the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.  This webhook is intended for use with `/transactions/get`; if you are using the newer `/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead."""


    webhook_type: str = Field( description="`TRANSACTIONS`")
    webhook_code: str = Field( description="`INITIAL_UPDATE`")
    error: Optional[str] = Field(default=None, description="The error code associated with the webhook.")
    new_transactions: float = Field( description="The number of new, unfetched transactions available.")
    item_id: str = Field( description="The `item_id` of the Item associated with this webhook, warning, or error")
    environment: WebhookEnvironmentValues = Field()

InitialUpdateWebhook.update_forward_refs()
