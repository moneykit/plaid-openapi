# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic.v1 import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.wallet_transaction_status import WalletTransactionStatus
from plaid_skel.models.webhook_environment_values import WebhookEnvironmentValues




class WalletTransactionStatusUpdateWebhook(BaseModel):
    """Fired when the status of a wallet transaction has changed."""


    webhook_type: str = Field( description="`WALLET`")
    webhook_code: str = Field( description="`WALLET_TRANSACTION_STATUS_UPDATE`")
    transaction_id: str = Field( description="The `transaction_id` for the wallet transaction being updated")
    payment_id: Optional[str] = Field(default=None, description="The `payment_id` associated with the transaction. This will be present in case of `REFUND` and `PIS_PAY_IN`")
    wallet_id: Optional[str] = Field(default=None, description="The EMI (E-Money Institution) wallet that this payment is associated with. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.")
    new_status: WalletTransactionStatus = Field()
    old_status: WalletTransactionStatus = Field()
    timestamp: datetime = Field( description="The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`")
    environment: WebhookEnvironmentValues = Field()

WalletTransactionStatusUpdateWebhook.update_forward_refs()
