# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.products import Products
from plaid_skel.models.sandbox_public_token_create_request_options import SandboxPublicTokenCreateRequestOptions




class SandboxPublicTokenCreateRequest(BaseModel):
    """SandboxPublicTokenCreateRequest defines the request schema for `/sandbox/public_token/create`"""


    client_id: Optional[str] = Field(default=None, description="Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.")
    secret: Optional[str] = Field(default=None, description="Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.")
    institution_id: str = Field( description="The ID of the institution the Item will be associated with")
    initial_products: List[Products] = Field( description="The products to initially pull for the Item. May be any products that the specified `institution_id`  supports. This array may not be empty.")
    options: Optional[SandboxPublicTokenCreateRequestOptions] = Field(default=None,)
    user_token: Optional[str] = Field(default=None, description="The user token associated with the User data is being requested for.")

SandboxPublicTokenCreateRequest.update_forward_refs()
