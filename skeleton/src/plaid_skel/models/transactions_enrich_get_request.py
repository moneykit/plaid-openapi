# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.client_provided_transaction import ClientProvidedTransaction
from plaid_skel.models.transactions_enrich_request_options import TransactionsEnrichRequestOptions




class TransactionsEnrichGetRequest(BaseModel):
    """TransactionsEnrichGetRequest defines the request schema for `/transactions/enrich`."""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#transactions_enrich_get_request"
            }
        }

    client_id: Optional[str] = Field(default=None, description="Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.")
    secret: Optional[str] = Field(default=None, description="Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.")
    account_type: str = Field( description="The account type for the requested transactions (either `depository` or `credit`).")
    transactions: List[ClientProvidedTransaction] = Field( description="An array of transaction objects to be enriched by Plaid. Maximum of 100 transactions per request.")
    options: Optional[TransactionsEnrichRequestOptions] = Field(default=None,)

TransactionsEnrichGetRequest.update_forward_refs()
