# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date as date_  # noqa: F401
from datetime import datetime as datetime_  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401




class ClientProvidedRawTransaction(BaseModel):
    """A client-provided transaction for Plaid to enhance."""


    id: str = Field( description="A unique ID for the transaction used to help you tie data back to your systems.")
    description: str = Field( description="The raw description of the transaction.")
    amount: float = Field( description="The value of the transaction with direction. (NOTE: this will affect enrichment results, so directions are important):.   Negative (-) for credits (e.g., incoming transfers, refunds)   Positive (+) for debits (e.g., purchases, fees, outgoing transfers)")
    iso_currency_code: str = Field( description="The ISO-4217 currency code of the transaction e.g. USD.")

ClientProvidedRawTransaction.update_forward_refs()
