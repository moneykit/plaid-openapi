# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic.v1 import field_validator, AnyUrl, BaseModel, EmailStr, Field  # noqa: F401




class WatchlistScreeningRequestSearchTerms(BaseModel):
    """Search inputs for creating a watchlist screening"""


    watchlist_program_id: str = Field( description="ID of the associated program.")
    legal_name: str = Field( description="The legal name of the individual being screened.")
    date_of_birth: Optional[date] = Field(default=None, description="A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).")
    document_number: Optional[str] = Field(default=None, description="The numeric or alphanumeric identifier associated with this document.")
    country: Optional[str] = Field(default=None, description="Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.")

    @field_validator("legal_name")
    @classmethod
    def legal_name_min_length(cls, value):
        assert len(value) >= 1
        return value

    @field_validator("document_number")
    @classmethod
    def document_number_min_length(cls, value):
        assert len(value) >= 4
        return value

    @field_validator("country")
    @classmethod
    def country_min_length(cls, value):
        assert len(value) >= 2
        return value

WatchlistScreeningRequestSearchTerms.update_forward_refs()
