# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.payment_initiation_payment_status import PaymentInitiationPaymentStatus
from plaid_skel.models.plaid_error import PlaidError
from plaid_skel.models.webhook_environment_values import WebhookEnvironmentValues




class PaymentStatusUpdateWebhook(BaseModel):
    """Fired when the status of a payment has changed."""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#payment_status_update_webhook"
            }
        }

    webhook_type: str = Field( description="`PAYMENT_INITIATION`")
    webhook_code: str = Field( description="`PAYMENT_STATUS_UPDATE`")
    payment_id: str = Field( description="The `payment_id` for the payment being updated")
    transaction_id: Optional[str] = Field(default=None, description="The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.")
    new_payment_status: PaymentInitiationPaymentStatus = Field()
    old_payment_status: PaymentInitiationPaymentStatus = Field()
    original_reference: Optional[str] = Field(default=None, description="The original value of the reference when creating the payment.")
    adjusted_reference: Optional[str] = Field(default=None, description="The value of the reference sent to the bank after adjustment to pass bank validation rules.")
    original_start_date: Optional[date] = Field(default=None, description="The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.")
    adjusted_start_date: Optional[date] = Field(default=None, description="The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.")
    timestamp: datetime = Field( description="The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`")
    error: Optional[PlaidError] = Field(default=None,)
    environment: WebhookEnvironmentValues = Field()

PaymentStatusUpdateWebhook.update_forward_refs()
