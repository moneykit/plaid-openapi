# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date as date_  # noqa: F401
from datetime import datetime as datetime_  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.fdx_hateoas_link import FDXHateoasLink
from plaid_skel.models.fdx_notification_category import FDXNotificationCategory
from plaid_skel.models.fdx_notification_payload import FDXNotificationPayload
from plaid_skel.models.fdx_notification_priority import FDXNotificationPriority
from plaid_skel.models.fdx_notification_severity import FDXNotificationSeverity
from plaid_skel.models.fdx_notification_type import FDXNotificationType
from plaid_skel.models.fdx_party import FDXParty




class FDXNotification(BaseModel):
    """Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload"""


    notification_id: str = Field( description="Id of notification")
    type: FDXNotificationType = Field()
    sent_on: datetime = Field( description="ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)")
    category: FDXNotificationCategory = Field()
    severity: Optional[FDXNotificationSeverity] = Field(default=None,)
    priority: Optional[FDXNotificationPriority] = Field(default=None,)
    publisher: FDXParty = Field()
    subscriber: Optional[FDXParty] = Field(default=None,)
    notification_payload: FDXNotificationPayload = Field()
    url: Optional[FDXHateoasLink] = Field(default=None,)

FDXNotification.update_forward_refs()
