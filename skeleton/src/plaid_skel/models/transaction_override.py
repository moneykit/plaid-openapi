# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic.v1 import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401




class TransactionOverride(BaseModel):
    """Data to populate as test transaction data. If not specified, random transactions will be generated instead."""


    date_transacted: date = Field( description="The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached. If a `date_transacted` is not provided by the institution, a transaction date may be available in the [`authorized_date`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-authorized-date) field.")
    date_posted: date = Field( description="The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions.")
    amount: float = Field( description="The transaction amount. Can be negative.")
    description: str = Field( description="The transaction description.")
    currency: Optional[str] = Field(default=None, description="The ISO-4217 format currency code for the transaction.")

TransactionOverride.update_forward_refs()
