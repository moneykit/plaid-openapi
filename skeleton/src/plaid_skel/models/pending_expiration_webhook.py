# coding: utf-8
# AUTOGENERATED with MDM customization.  Do not edit.




from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from plaid_skel.models.webhook_environment_values import WebhookEnvironmentValues




class PendingExpirationWebhook(BaseModel):
    """Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode."""

    class Config:
        schema_extra = {
            "externalDocs": {
                "url": "https://plaid.com/docs/api/accounts/#pending_expiration_webhook"
            }
        }

    webhook_type: str = Field( description="`ITEM`")
    webhook_code: str = Field( description="`PENDING_EXPIRATION`")
    item_id: str = Field( description="The `item_id` of the Item associated with this webhook, warning, or error")
    consent_expiration_time: datetime = Field( description="The date and time at which the Item's access consent will expire, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format")
    environment: WebhookEnvironmentValues = Field()

PendingExpirationWebhook.update_forward_refs()
